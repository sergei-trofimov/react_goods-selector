{"version":3,"sources":["App.js","index.js"],"names":["goodsFromServer","App","state","selectedGood","sentence","addGood","good","push","removeGood","index","indexOf","splice","getClearList","setState","this","newSentence","join","className","type","onClick","map","classNames","active","includes","key","React","Component","ReactDOM","render","document","getElementById"],"mappings":"uPAIMA,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA0GaC,E,4MAtGbC,MAAQ,CACNC,aAAc,GACdC,SAAU,I,EAGZC,QAAU,SAACC,GACT,EAAKJ,MAAMC,aAAaI,KAAKD,I,EAG/BE,WAAa,SAACF,GACZ,IAAMG,EAAQ,EAAKP,MAAMC,aAAaO,QAAQJ,GAE9C,EAAKJ,MAAMC,aAAaQ,OAAOF,EAAO,I,EAGxCG,aAAe,WACb,EAAKC,SAAS,CACZV,aAAc,GAAIC,SAAU,M,4CAIhC,WAAU,IAAD,OACP,EAAmCU,KAAKZ,MAAhCC,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,SAChBW,EAAc,kBAClB,EAAKF,SAAS,CAAET,SAAUD,EAAaa,KAAK,SAG9C,OACE,yBAAKC,UAAU,OACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,qBACVb,EAEC,oCACE,wBAAIa,UAAU,qBAAd,kBACA,uBAAGA,UAAU,uBAAuBb,IAGtC,wBAAIa,UAAU,qBAAd,sBAGHb,EAEG,4BACEa,UAAU,sBACVC,KAAK,SACLC,QAAS,WACP,EAAKP,iBAJT,SAUA,MAGR,wBAAIK,UAAU,aAEVjB,EAAgBoB,KAAI,SAAAd,GAAI,OACtB,wBACEW,UAAWI,IAAW,OAAQ,CAC5BC,OAAQlB,EAASmB,SAASjB,KAE5BkB,IAAKlB,GAEL,0BAAMW,UAAU,iBAAiBX,GAE7BF,EAASmB,SAASjB,GAchB,4BACEW,UAAU,iBACVC,KAAK,SACLC,QAAS,WACP,EAAKX,WAAWF,GAChBS,MALJ,UAZA,4BACEE,UAAU,cACVC,KAAK,SACLC,QAAS,WACP,EAAKd,QAAQC,GACbS,MALJ,oB,GAtEJU,IAAMC,WCbxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.a7a20141.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\nimport classNames from 'classnames';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    selectedGood: [],\n    sentence: '',\n  }\n\n  addGood = (good) => {\n    this.state.selectedGood.push(good);\n  }\n\n  removeGood = (good) => {\n    const index = this.state.selectedGood.indexOf(good);\n\n    this.state.selectedGood.splice(index, 1);\n  }\n\n  getClearList = () => {\n    this.setState({\n      selectedGood: [], sentence: '',\n    });\n  }\n\n  render() {\n    const { selectedGood, sentence } = this.state;\n    const newSentence = () => (\n      this.setState({ sentence: selectedGood.join(', ') })\n    );\n\n    return (\n      <div className=\"app\">\n        <div className=\"list-title\">\n          <div className=\"list-title__block\">\n            { (sentence)\n              ? (\n                <>\n                  <h1 className=\"list-title__title\">Selected good:</h1>\n                  <p className=\"list-title__content\">{sentence}</p>\n                </>\n              )\n              : <h1 className=\"list-title__title\">No goods selected</h1> }\n          </div>\n          {\n            (sentence)\n              ? (\n                <button\n                  className=\"btn list-title__btn\"\n                  type=\"button\"\n                  onClick={() => {\n                    this.getClearList();\n                  }}\n                >\n                  Clear\n                </button>\n              )\n              : null\n          }\n        </div>\n        <ul className=\"todo-list\">\n          {\n            goodsFromServer.map(good => (\n              <li\n                className={classNames(`todo`, {\n                  active: sentence.includes(good),\n                })}\n                key={good}\n              >\n                <span className=\"todo__content\">{good}</span>\n                {\n                  (!sentence.includes(good))\n                    ? (\n                      <button\n                        className=\"btn btn-add\"\n                        type=\"button\"\n                        onClick={() => {\n                          this.addGood(good);\n                          newSentence();\n                        }}\n                      >\n                        Select\n                      </button>\n                    )\n                    : (\n                      <button\n                        className=\"btn btn-remove\"\n                        type=\"button\"\n                        onClick={() => {\n                          this.removeGood(good);\n                          newSentence();\n                        }}\n                      >\n                        Remove\n                      </button>\n                    )\n                }\n              </li>\n            ))\n          }\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}