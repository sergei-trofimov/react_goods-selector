{"version":3,"sources":["App.js","index.js"],"names":["goodsFromServer","App","state","selectedGood","addGood","good","setState","prev","removeGood","filter","item","getClearList","makeList","part","slice","join","length","this","className","type","onClick","map","key","classNames","active","includes","React","Component","ReactDOM","render","document","getElementById"],"mappings":"8PAIMA,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAuHaC,E,4MAnHbC,MAAQ,CACNC,aAAc,CAAC,Q,EAGjBC,QAAU,SAACC,GACT,EAAKC,UAAS,SAAAC,GAAI,MAAK,CACrBJ,aAAa,GAAD,mBAAMI,EAAKJ,cAAX,CAAyBE,S,EAIzCG,WAAa,SAACH,GACZ,EAAKC,UAAS,SAAAC,GAAI,MAAK,CACrBJ,aAAc,YAAII,EAAKJ,cAAcM,QAAO,SAAAC,GAAI,OAAIA,IAASL,U,EAIjEM,aAAe,WACb,EAAKL,SAAS,CACZH,aAAc,M,EAIlBS,SAAW,WACT,IAAQT,EAAiB,EAAKD,MAAtBC,aACFU,EAAOV,EAAaW,MAAM,GAAI,GAAGC,KAAK,MAE5C,OAAQZ,EAAaa,QACnB,KAAK,EACH,MAAO,GAET,KAAK,EACH,MAAM,GAAN,OAAUb,EAAaY,KAAK,MAA5B,gBAEF,KAAK,EACH,MAAM,GAAN,OAAUZ,EAAa,GAAvB,2BACIA,EAAa,GADjB,iBAGF,QACE,MAAM,GAAN,OAAUU,EAAV,2BACIV,EAAaA,EAAaa,OAAS,GADvC,mB,4CAKN,WAAU,IAAD,OACCb,EAAiBc,KAAKf,MAAtBC,aAER,OACE,yBAAKe,UAAU,OACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,qBACb,wBAAIA,UAAU,qBACXD,KAAKL,WAAWI,OAAS,EACrB,iBACA,qBAGP,uBAAGE,UAAU,uBAAuBD,KAAKL,aAGxCK,KAAKL,WAAWI,OAAS,EAEtB,4BACEE,UAAU,sBACVC,KAAK,SACLC,QAAS,WACP,EAAKT,iBAJT,SAUA,MAGR,wBAAIO,UAAU,aACXlB,EAAgBqB,KAAI,SAAAhB,GAAI,OACvB,wBACEiB,IAAKjB,EACLa,UAAWK,IAAW,OAAQ,CAC5BC,OAAQrB,EAAasB,SAASpB,MAGhC,0BAAMa,UAAU,iBAAiBb,GAC/BF,EAAasB,SAASpB,GAapB,4BACEa,UAAU,iBACVC,KAAK,SACLC,QAAS,WACP,EAAKZ,WAAWH,KAJpB,UAXA,4BACEa,UAAU,cACVC,KAAK,SACLC,QAAS,WACP,EAAKhB,QAAQC,KAJjB,oB,GAtFAqB,IAAMC,WCbxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.dd6f2e3b.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\nimport classNames from 'classnames';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    selectedGood: ['Jam'],\n  }\n\n  addGood = (good) => {\n    this.setState(prev => ({\n      selectedGood: [...prev.selectedGood, good],\n    }));\n  }\n\n  removeGood = (good) => {\n    this.setState(prev => ({\n      selectedGood: [...prev.selectedGood].filter(item => item !== good),\n    }));\n  }\n\n  getClearList = () => {\n    this.setState({\n      selectedGood: [],\n    });\n  }\n\n  makeList = () => {\n    const { selectedGood } = this.state;\n    const part = selectedGood.slice(0, -1).join(', ');\n\n    switch (selectedGood.length) {\n      case 0:\n        return '';\n\n      case 1:\n        return `${selectedGood.join(', ')} is selected`;\n\n      case 2:\n        return `${selectedGood[0]} and\n          ${selectedGood[1]} are selected`;\n\n      default:\n        return `${part} and\n          ${selectedGood[selectedGood.length - 1]} are selected`;\n    }\n  }\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <div className=\"app\">\n        <div className=\"list-title\">\n          <div className=\"list-title__block\">\n            <h1 className=\"list-title__title\">\n              {this.makeList().length > 0\n                ? ('Selected good:')\n                : ('No goods selected')\n              }\n            </h1>\n            <p className=\"list-title__content\">{this.makeList()}</p>\n          </div>\n          {\n            (this.makeList().length > 0)\n              ? (\n                <button\n                  className=\"btn list-title__btn\"\n                  type=\"button\"\n                  onClick={() => {\n                    this.getClearList();\n                  }}\n                >\n                  Clear\n                </button>\n              )\n              : null\n          }\n        </div>\n        <ul className=\"todo-list\">\n          {goodsFromServer.map(good => (\n            <li\n              key={good}\n              className={classNames(`todo`, {\n                active: selectedGood.includes(good),\n              })}\n            >\n              <span className=\"todo__content\">{good}</span>\n              {!selectedGood.includes(good)\n                ? (\n                  <button\n                    className=\"btn btn-add\"\n                    type=\"button\"\n                    onClick={() => {\n                      this.addGood(good);\n                    }}\n                  >\n                    Select\n                  </button>\n                )\n                : (\n                  <button\n                    className=\"btn btn-remove\"\n                    type=\"button\"\n                    onClick={() => {\n                      this.removeGood(good);\n                    }}\n                  >\n                    Remove\n                  </button>\n                )\n                }\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}